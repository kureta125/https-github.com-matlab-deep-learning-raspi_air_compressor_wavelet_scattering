<ハードウエア実行時の処理能力からくる制約>
Wavelet変換処理が最も大きな制約となっている
処理速度が原因なら採取時間を延ばすと処理単位であるフレームレートも伸びるため、問題ないはず
実際は採取時間を延ばすとsegment faultエラー? で動作が怪しくなる(Simulink側にエラー表示なし)
所要メモリサイズか転送速度の問題。Linux上でプロセスを観察するとパイプが詰まっている様子

<入力サンプルの間引き>
上記を回避するため、Wavelet変換処理負荷を軽減できるよう入力信号を間引く
Raspberry-Piのマイク入力サンプリング周波数設定は ALSAの制約により44100Hz (or 48000Hz)
元データの16000Hzに比べ多すぎるので、1/3にサブサンプルして 14700Hzで使用 (sim上で1/2と差はない。1/4では精度劣化)
同じくWavelet変換の処理負荷軽減のため、全サンプル使用せず、
元データ3秒のうち1.5秒分を使用　(2sではパイプが詰まる、sim上は精度に違いがなさそう)

<LSTMネットワークのサイズに関するパラメータ>
特徴量を時系列で間引いて、ネットワークの入力サイズを減らす(2つに1つを採用)
オリジナルのコードでは間引きは3つに1つだが、採取時間を半分にしたのでLSTM側に余裕ができた
LSTMパラメータ削減目標(プロジェクション)　ターゲットはLSTMreductionTgt=0.90としている